# PayPass NGINX Load Balancer Configuration
# High-performance reverse proxy and load balancer for PayPass services
# Load Balancing: Enabled

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Main context events
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

# HTTP context
http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Buffer settings
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # Timeouts
    client_header_timeout 30s;
    client_body_timeout 30s;
    send_timeout 30s;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_min_length 1000;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=20r/m;
    limit_req_zone $binary_remote_addr zone=payment:10m rate=50r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=200r/m;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Upstream definitions
    upstream paypass_app {
        least_conn;
        server paypass-app-1:3000 max_fails=3 fail_timeout=30s weight=3;
        server paypass-app-2:3000 max_fails=3 fail_timeout=30s weight=3;
        server paypass-app-3:3000 max_fails=3 fail_timeout=30s weight=3;
        keepalive 32;
    }
    
    upstream api_gateway {
        least_conn;
        server paypass-api-gateway-1:8080 max_fails=3 fail_timeout=30s;
        server paypass-api-gateway-2:8080 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream user_service {
        least_conn;
        server paypass-user-service-1:3001 max_fails=3 fail_timeout=30s;
        server paypass-user-service-2:3001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream payment_service {
        least_conn;
        server paypass-payment-service-1:3002 max_fails=3 fail_timeout=30s;
        server paypass-payment-service-2:3002 max_fails=3 fail_timeout=30s;
        server paypass-payment-service-3:3002 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream wallet_service {
        least_conn;
        server paypass-wallet-service-1:3003 max_fails=3 fail_timeout=30s;
        server paypass-wallet-service-2:3003 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream analytics_service {
        least_conn;
        server paypass-analytics-service-1:3004 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }
    
    upstream fraud_detection_service {
        least_conn;
        server paypass-fraud-detection-1:3005 max_fails=3 fail_timeout=30s;
        server paypass-fraud-detection-2:3005 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    upstream compliance_service {
        least_conn;
        server paypass-compliance-service-1:3006 max_fails=3 fail_timeout=30s;
        keepalive 8;
    }
    
    # SSL/TLS settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Cache settings
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=paypass_cache:10m max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=2g inactive=24h use_temp_path=off;
    
    # Main server block (HTTPS)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name paypass.com www.paypass.com;
        
        # SSL certificates
        ssl_certificate /etc/ssl/certs/paypass.com.crt;
        ssl_certificate_key /etc/ssl/private/paypass.com.key;
        ssl_trusted_certificate /etc/ssl/certs/paypass-ca.crt;
        
        # Logging
        access_log /var/log/nginx/paypass_access.log main;
        error_log /var/log/nginx/paypass_error.log;
        
        # Security and rate limiting
        limit_conn addr 50;
        limit_req zone=general burst=20 nodelay;
        
        # Root and index
        root /var/www/paypass/public;
        index index.html;
        
        # Static files caching
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            
            # Try static file first, then proxy to app
            try_files $uri @app;
        }
        
        # API Gateway proxy
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://api_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Cache API responses (selective)
            proxy_cache paypass_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # Authentication API (stricter rate limiting)
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://user_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        # Payment API (secured and rate limited)
        location /api/payment/ {
            limit_req zone=payment burst=10 nodelay;
            
            proxy_pass http://payment_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # No caching for payment endpoints
            proxy_cache off;
        }
        
        # Wallet API
        location /api/wallet/ {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://wallet_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 20s;
            proxy_read_timeout 20s;
        }
        
        # Analytics API
        location /api/analytics/ {
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://analytics_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Cache analytics responses
            proxy_cache paypass_cache;
            proxy_cache_valid 200 5m;
        }
        
        # Fraud Detection API
        location /api/fraud/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://fraud_detection_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;
        }
        
        # Compliance API
        location /api/compliance/ {
            limit_req zone=api burst=5 nodelay;
            
            proxy_pass http://compliance_service;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_Set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Health check endpoint (no rate limiting)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # NGINX status (restricted)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # Main application (Next.js)
        location @app {
            proxy_pass http://paypass_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Default location (try files then proxy)
        location / {
            try_files $uri $uri/ @app;
        }
        
        # Security: Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # HTTP to HTTPS redirect
    server {
        listen 80;
        listen [::]:80;
        server_name paypass.com www.paypass.com;
        return 301 https://$server_name$request_uri;
    }
    
    # Default server (catch-all)
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        
        ssl_certificate /etc/ssl/certs/default.crt;
        ssl_certificate_key /etc/ssl/private/default.key;
        
        server_name _;
        return 444;
    }
}

# Stream context for TCP/UDP load balancing
stream {
    # Database connection pooling
    upstream postgres_cluster {
        server paypass-postgres-1:5432 max_fails=3 fail_timeout=30s;
        server paypass-postgres-2:5432 max_fails=3 fail_timeout=30s backup;
    }
    
    # Redis cluster
    upstream redis_cluster {
        server paypass-redis-1:6379 max_fails=3 fail_timeout=30s;
        server paypass-redis-2:6379 max_fails=3 fail_timeout=30s;
        server paypass-redis-3:6379 max_fails=3 fail_timeout=30s;
    }
    
    # PostgreSQL proxy
    server {
        listen 5432;
        proxy_pass postgres_cluster;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_connect_timeout 1s;
    }
    
    # Redis proxy
    server {
        listen 6379;
        proxy_pass redis_cluster;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_connect_timeout 1s;
    }
}
